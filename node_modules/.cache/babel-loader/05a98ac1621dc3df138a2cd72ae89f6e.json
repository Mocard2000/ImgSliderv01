{"ast":null,"code":"import _toConsumableArray from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/michael/Projects/effects/horizontal-slider/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/michael/Projects/effects/horizontal-slider/src/components/Slider.jsx\";\nimport React, { Component } from 'react';\nimport Card from './Card.jsx';\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n\n    var posArr = _toConsumableArray(_this.props.list).map(function (e, i) {\n      return i;\n    });\n\n    _this.state = {\n      list: _toConsumableArray(_this.props.list),\n      center: Math.floor(_this.props.list.length / 2),\n      posArr: posArr\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"handleClick\",\n    value: function handleClick(prevPosition) {\n      console.log(prevPosition); // Check if clicked center card\n\n      var center = this.state.center;\n      if (prevPosition === center) return;\n      var shift = Math.abs(center - prevPosition);\n      var isSlideRight = center > prevPosition ? false : true;\n      var newPosArr = this.state.posArr.slice();\n\n      if (isSlideRight) {\n        for (var i in this.state.posArr) {\n          newPosArr.push(newPosArr.shift());\n        }\n      } else {\n        for (var _i in this.state.posArr) {\n          newPosArr.unshift(newPosArr.pop());\n        }\n      }\n\n      this.setState({\n        posArr: newPosArr\n      });\n    }\n  }, {\n    key: \"checkPosition\",\n    value: function checkPosition() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.state.list.map(function (card, i) {\n        return React.createElement(Card, {\n          key: card.key,\n          info: card // isCenter={this.state.center === checkPosition}\n          ,\n          position: _this2.state.posArr.indexOf(i),\n          onClick: _this2.handleClick.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, cards);\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nexport { Slider as default };","map":{"version":3,"sources":["/home/michael/Projects/effects/horizontal-slider/src/components/Slider.jsx"],"names":["React","Component","Card","Slider","props","posArr","list","map","e","i","state","center","Math","floor","length","prevPosition","console","log","shift","abs","isSlideRight","newPosArr","slice","push","unshift","pop","setState","cards","card","key","indexOf","handleClick","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AACA,QAAMC,MAAM,GAAG,mBAAI,MAAKD,KAAL,CAAWE,IAAf,EAAqBC,GAArB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAV;AAAA,KAAzB,CAAf;;AACA,UAAKC,KAAL,GAAa;AACTJ,MAAAA,IAAI,qBAAM,MAAKF,KAAL,CAAWE,IAAjB,CADK;AAETK,MAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAW,MAAKT,KAAL,CAAWE,IAAX,CAAgBQ,MAAhB,GAAuB,CAAlC,CAFC;AAGTT,MAAAA,MAAM,EAANA;AAHS,KAAb;AAHe;AAQlB;;;;gCACWU,Y,EAAc;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EADsB,CAEtB;;AACA,UAAMJ,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,UAAGI,YAAY,KAAKJ,MAApB,EAA4B;AAE5B,UAAMO,KAAK,GAAGN,IAAI,CAACO,GAAL,CAASR,MAAM,GAAGI,YAAlB,CAAd;AACA,UAAMK,YAAY,GAAGT,MAAM,GAAGI,YAAT,GAAwB,KAAxB,GAAgC,IAArD;AACA,UAAMM,SAAS,GAAG,KAAKX,KAAL,CAAWL,MAAX,CAAkBiB,KAAlB,EAAlB;;AAEA,UAAGF,YAAH,EAAiB;AACb,aAAK,IAAIX,CAAT,IAAc,KAAKC,KAAL,CAAWL,MAAzB,EAAiC;AAC7BgB,UAAAA,SAAS,CAACE,IAAV,CAAeF,SAAS,CAACH,KAAV,EAAf;AACH;AACJ,OAJD,MAIO;AACH,aAAK,IAAIT,EAAT,IAAc,KAAKC,KAAL,CAAWL,MAAzB,EAAiC;AAC7BgB,UAAAA,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACI,GAAV,EAAlB;AACH;AACJ;;AACD,WAAKC,QAAL,CAAc;AAACrB,QAAAA,MAAM,EAAEgB;AAAT,OAAd;AAEH;;;oCACe,CAEf;;;6BACQ;AAAA;;AACL,UAAMM,KAAK,GAAG,KAAKjB,KAAL,CAAWJ,IAAX,CAAgBC,GAAhB,CAAoB,UAACqB,IAAD,EAAOnB,CAAP;AAAA,eAC1B,oBAAC,IAAD;AACI,UAAA,GAAG,EAAEmB,IAAI,CAACC,GADd;AAEI,UAAA,IAAI,EAAED,IAFV,CAGI;AAHJ;AAII,UAAA,QAAQ,EAAE,MAAI,CAAClB,KAAL,CAAWL,MAAX,CAAkByB,OAAlB,CAA0BrB,CAA1B,CAJd;AAKI,UAAA,OAAO,EAAE,MAAI,CAACsB,WAAL,CAAiBC,IAAjB,CAAsB,MAAtB,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0B;AAAA,OAApB,CAAd;AAUA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,KADL,CADJ;AAKH;;;;EAnD+B1B,S;;SAAfE,M","sourcesContent":["import React, { Component } from 'react'\nimport Card from './Card.jsx'\n\nexport default class Slider extends Component {\n    constructor(props) {\n        super(props) \n        const posArr = [...this.props.list].map((e, i) => i)\n        this.state = {\n            list: [...this.props.list],\n            center: Math.floor(this.props.list.length/2),\n            posArr\n        }\n    }\n    handleClick(prevPosition) {\n        console.log(prevPosition)\n        // Check if clicked center card\n        const center = this.state.center\n        if(prevPosition === center) return ;\n        \n        const shift = Math.abs(center - prevPosition)\n        const isSlideRight = center > prevPosition ? false : true\n        const newPosArr = this.state.posArr.slice()\n\n        if(isSlideRight) {\n            for (let i in this.state.posArr) { \n                newPosArr.push(newPosArr.shift())\n            } \n        } else {\n            for (let i in this.state.posArr) {\n                newPosArr.unshift(newPosArr.pop())\n            }             \n        }\n        this.setState({posArr: newPosArr})\n\n    }\n    checkPosition() {\n        \n    }\n    render() {\n        const cards = this.state.list.map((card, i) => (   \n                <Card \n                    key={card.key}\n                    info={card}\n                    // isCenter={this.state.center === checkPosition}\n                    position={this.state.posArr.indexOf(i)} \n                    onClick={this.handleClick.bind(this)}>\n                </Card>\n          ))\n      \n        return (\n            <div className=\"slider\">        \n                {cards}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}